{"version":3,"sources":["../src/VStateSelect.ts"],"names":[],"mappings":";;;;;;;AAEA;;AAGA;;AAGA;;AAMA;;;;;;;;;;AAEA;AACA,IAAM,IAAI,GAAG,gBAAI,MAAJ,CAAW;AAAE,EAAA,MAAM,EAAE,CAAC,kBAAD;AAAV,CAAX,CAAb,C,CASA;;;gBACe,IAAI,CAAC,MAAL,GAAuB,MAAvB,CAA8B;AAC3C,EAAA,IAAI,EAAE,gBADqC;AAE3C,EAAA,KAAK,EAAE;AACL,IAAA,cAAc,EAAE;AACd,MAAA,IAAI,EAAE,OADQ;AAEd,iBAAS;AAFK,KADX;AAKL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE,KADC;AAEP,iBAAS;AAAA,eAAM,EAAN;AAAA;AAFF,KALJ;AASL,IAAA,kBAAkB,EAAE;AAClB,MAAA,IAAI,EAAE,OADY;AAElB,iBAAS;AAFS,KATf;AAaL,IAAA,WAAW,EAAE;AACX,MAAA,IAAI,EAAE,MADK;AAEX,iBAAS;AAFE,KAbR;AAiBL,IAAA,IAAI,EAAE;AACJ,MAAA,IAAI,EAAE,MADF;AAEJ,iBAAS;AAFL;AAjBD,GAFoC;AAwB3C,EAAA,QAAQ,EAAE;AACR,IAAA,QADQ,sBACA;AAAA,UACE,cADF,GACqE,IADrE,CACE,cADF;AAAA,UACkB,OADlB,GACqE,IADrE,CACkB,OADlB;AAAA,UAC2B,kBAD3B,GACqE,IADrE,CAC2B,kBAD3B;AAAA,UAC+C,WAD/C,GACqE,IADrE,CAC+C,WAD/C;AAAA,UAC4D,IAD5D,GACqE,IADrE,CAC4D,IAD5D;AAEN,UAAM,SAAS,GAAG,IAAI,oBAAJ,CAAc;AAC9B,QAAA,cAAc,EAAd,cAD8B;AAE9B,QAAA,OAAO,EAAP,OAF8B;AAG9B,QAAA,kBAAkB,EAAlB;AAH8B,OAAd,CAAlB;AAKA,aAAO,SAAS,CAAC,MAAV,CAAiB;AACtB,QAAA,KAAK,EAAE,IADe;AAEtB,QAAA,MAAM,EAAE;AAFc,OAAjB,CAAP;AAID,KAZO;AAaR,IAAA,OAbQ,qBAaD;AACL,+BACK,mBAAc,OAAd,CAAsB,QAAtB,CAA+B,OAA/B,CAAuC,IAAvC,CAA4C,IAA5C,CADL;AAEE,0BAAkB;AAFpB;AAID;AAlBO;AAxBiC,CAA9B,C","sourcesContent":["// Imported Types\n/// <reference path=\"../node_modules/vuetify/src/globals.d.ts\" />\nimport Vue from 'vue'\n\n// 3rd Party Libs\nimport { UsaStates } from 'usa-states'\n\n// Styles\nimport './VStateSelect.sass'\n\n/**\n * Import the Vuetify components you plan to extend here.\n */\n// @ts-ignore\nimport { VAutocomplete } from 'vuetify/lib'\n\n// Create Base Mixins and Define Custom Properties\nconst base = Vue.extend({ mixins: [VAutocomplete] })\ninterface options extends InstanceType<typeof base> {\n  /**\n   * !Props unique to VStateSelect\n   */\n  contiguousOnly: boolean\n  exclude: string[]\n  includeTerritories: boolean\n}\n// Extend VAutocomplete to define the VStateSelect component\nexport default base.extend<options>().extend({\n  name: 'v-state-select',\n  props: {\n    contiguousOnly: {\n      type: Boolean,\n      default: false,\n    },\n    exclude: {\n      type: Array,\n      default: () => [],\n    },\n    includeTerritories: {\n      type: Boolean,\n      default: false,\n    },\n    storedValue: {\n      type: String,\n      default: 'abbr',\n    },\n    text: {\n      type: String,\n      default: 'name',\n    },\n  },\n  computed: {\n    allItems (): object[] {\n      const { contiguousOnly, exclude, includeTerritories, storedValue, text } = this\n      const usaStates = new UsaStates({\n        contiguousOnly,\n        exclude,\n        includeTerritories,\n      })\n      return usaStates.format({\n        $text: text,\n        $value: storedValue,\n      })\n    },\n    classes (): object {\n      return {\n        ...VAutocomplete.options.computed.classes.call(this),\n        'v-state-select': true,\n      }\n    },\n  },\n})\n"],"sourceRoot":"","file":"VStateSelect.js"}